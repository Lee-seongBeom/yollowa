<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.proj.yollowa.model.adminpage.AdminDao">
	<!-- HOST 권한을 요청한 USER들을 hostrqn과 user 테이블과 매칭하여 출력한다 -->
	<select id="getHostApprovalStandbyList" resultType="com.proj.yollowa.model.entity.admin.HostrqnApprovalVo">
		<![CDATA[
		SELECT 
			hostrqn_no,hostrqn_userNo,hostrqn_companyNumber,hostrqn_companyName,
			hostrqn_info,user_number,user_nickName,user_name,user_phoneNumber,
			user_id,user_email,user_companyNumber,user_companyName,
			user_activityCompanyName,user_level 
		FROM HOSTRQN, USER 
		WHERE HOSTRQN_USERNO = USER_NUMBER
		]]>
	</select>
	<!-- hostrqn 테이블 get one -->
	<select id="getHostApprovalStandby" resultType="com.proj.yollowa.model.entity.admin.HostrqnApprovalVo">
		select * from hostrqn where hostrqn_no=${hostrqn_no}
	</select>
	<!-- user 정보를 가저 온다 -->
	<select id="getUser" resultType="com.proj.yollowa.model.entity.UserVo">
		select * from user where user_number = ${user_number}
	</select>
	<!-- 권한이 승인 된 후 승인된 사업자 정보를 업데이트 한다 -->
	<update id="updateUserLevelToHost">
		<![CDATA[
		UPDATE USER SET 
			USER_COMPANYNUMBER = #{user.user_companyNumber}, 
		]]>
			<if test="hostrqn_info == 1">
				USER_COMPANYNAME = #{user.user_companyName}, 
			</if>
			<if test="hostrqn_info == 2">
				USER_ACTIVITYCOMPANYNAME = #{user.user_activityCompanyName}, 
			</if>
		<![CDATA[
			USER_LEVEL = #{user.user_level} 
		WHERE USER_NUMBER =#{user.user_number}
		]]>
	</update>
	<!-- 승인을 한 사업장 등록 항목 hostrqn 테이블에서 삭제한다 -->
	<delete id="deleteOneHostrqn">
		DELETE FROM HOSTRQN WHERE HOSTRQN_NO = #{hostrqn_no}
	</delete>
	
	<!-- 승인이 필요한 ACTIVITY 항목을 출력한다 -->
	<select id="getActivityApprovalStandbyList" resultType="com.proj.yollowa.model.entity.admin.ActivityApprovalVo">
		<![CDATA[
		SELECT ACTIVITY_NUMBER, ACTIVITYOPTION_ARTICLENUMBER, ACTIVITY_IMG, ACTIVITY_TEMP, USER_COMPANYNAME, USER_NAME 
		FROM ACTIVITY, USER, activityoption 
		WHERE ACTIVITY_USERNUMBER = USER_NUMBER AND ACTIVITY_TEMP !=1 AND ACTIVITYOPTION_ARTICLENUMBER=ACTIVITY_NUMBER
		]]>
	</select>
	<!-- ACTIVITY 테이블의 ACTIVITY_TEMP 값을 1로 UPDATE한다 -->
	<update id="updateActivityTempToApproved">
		<![CDATA[
		UPDATE ACTIVITY SET activity_temp = 1 WHERE (ACTIVITY_NUMBER = #{activity_number})
		]]>
	</update>
	
	<!-- 승인이 필요한 LODGEMENT 항목을 출력한다 -->
	<select id="getLodgementApprovalStandbyList" resultType="com.proj.yollowa.model.entity.admin.LodgementApprovalVo">
		SELECT 
			LODGEMENT_NUMBER, ROOMINFO_ARTICLENUMBER, LODGEMENT_COMPANYNAME, LODGEMENT_IMG, LODGEMENT_TEMP, USER_COMPANYNAME, USER_NAME 
		FROM LODGEMENT, USER, ROOMINFO 
		WHERE LODGEMENT_USERNUMBER = USER_NUMBER AND LODGEMENT_TEMP !=1 AND ROOMINFO_ARTICLENUMBER=LODGEMENT_NUMBER GROUP BY LODGEMENT_NUMBER
	</select>
	<!-- LODGEMENT 테이블의 LODGEMENT_TEMP 값을 1로 UPDATE한다 -->
	<update id="updateLodgementTempToApproved">
        UPDATE LODGEMENT SET LODGEMENT_TEMP = 1 WHERE (LODGEMENT_NUMBER = #{lodgement_number})
	</update>
	
	<!-- MANAGER -->
	<select id="getManagerList" resultType="com.proj.yollowa.model.entity.ManagerVo">
		SELECT MANAGER_NUMBER, MANAGER_ID, MANAGER_LEVEL 
		FROM MANAGER
	</select>
	
	<select id="getManager" resultType="com.proj.yollowa.model.entity.ManagerVo">
		SELECT 
			MANAGER_NUMBER, MANAGER_ID, MANAGER_LEVEL, MANAGER_PASSWORD 
		FROM MANAGER 
		WHERE MANAGER_NUMBER = #{manager_number}
	</select>
	
	<insert id="insertManager">
		INSERT INTO MANAGER (MANAGER_LEVEL, MANAGER_ID, MANAGER_PASSWORD) 
		VALUES (#{manager_level}, #{manager_id}, #{manager_password})
	</insert>
	
	<update id="updateManager">
		UPDATE MANAGER 
		SET MANAGER_LEVEL = #{manager_level}, MANAGER_ID = #{manager_id}, MANAGER_PASSWORD = #{manager_password} 
		WHERE (MANAGER_NUMBER = #{manager_number})
	</update>
	
	<delete id="deleteManager">
		DELETE FROM MANAGER WHERE (MANAGER_NUMBER = #{manager_number})
	</delete>
	
</mapper>
